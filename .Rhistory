setwd("C:/Users/Joaquin/Desktop/UdeSA/Maestría en Economía/Herramientas Computacionales Para Investigación/Herramientas-Computacionales-Liwski-Sury-Trabajo-Final")
#Cargo Paquetes
suppressMessages({
if(!require("pacman")) install.packages("pacman")
pacman::p_load("tidyverse","readxl","haven","sf","rgdal","RecordLinkage")
})
rm(list=ls())
#cargo los dta
inputfolder<-"Data, figuras y do originales/Data-Original/"
dtas<-list.files(path= inputfolder, recursive = TRUE, include.dirs = TRUE)
for(file in dtas) {
# nombre al cual le asigno cada dta
obj_name <- gsub(".dta", "", file)
#open file
dta_file <- read_dta(paste0(inputfolder,file))
# Assign
assign(obj_name, dta_file)
}
#Borro lo que este de mas
rm(dta_file,dtas,file,obj_name)
#Limpio nombres de merge
merge_ss_eneu_final$descripcion_municipio[which(merge_ss_eneu_final$descripcion_municipio=="")]<-merge_ss_eneu_final$name_ss[which(merge_ss_eneu_final$descripcion_municipio=="")]
#merge_ss_eneu_final$descripcion_municipio<-str_to_title(iconv(merge_ss_eneu_final$descripcion_municipio, to = 'Latin1'))
merge_ss_eneu_final$descripcion_municipio<-str_to_title(merge_ss_eneu_final$descripcion_municipio)
#Inporto SHP
#municipioshp <- read_sf("Data, figuras y do originales/municipios_mx_feb2018/municipios_mx_feb2018.shp") #faster
municipio <- readOGR("Data, figuras y do originales/municipios_mx_feb2018/municipios_mx_feb2018.shp")
#plot(municipioshp)
#Names
municipio@data$NOMGEO<-str_to_title(iconv(municipio@data$NOMGEO, to = 'Latin1'))
#Paso a numeric la variable en base a la cual voy a unir.
municipio@data$CVEGEO<-as.numeric(municipio@data$CVEGEO)
#Agrego al poligono la data para unir a los demas
municipio@data<-municipio@data%>%left_join(merge_ss_eneu_final,by=c("CVEGEO"="municipality"))
#Para gif
benef_SP_2002_2009$mydate<-as.factor(paste0(benef_SP_2002_2009$year,benef_SP_2002_2009$quarter))
municipiogif <- broom::tidy(municipio)  #limpio municipio para ggmap
municipio@data$order <- as.numeric(row.names(municipio@data)) # allocate an id variable to the sp data
municipiogif$order <- as.numeric(row.names(municipiogif)) # allocate an id variable to the sp data
head(municipio@data, n = 2) # final check before join (requires shared variable name)
head(municipiogif, n = 2) # final check before join (requires shared variable name)
municipiogif <- left_join(municipiogif, municipio@data%>%select(NOMGEO,cvemun,order)) # join the data
municipiogif<-municipiogif%>%left_join(benef_SP_2002_2009%>%filter(mydate==20024))#agregamos datos de beneficiarios.
municipiogif$benefitiaries<-ifelse(municipiogif$ind>10,municipiogif$ind,NA)#If greater than ten, program is active, else, not, como paper.
head(municipiogif)
ggplot(data = municipiogif, # the input data
aes(x = long, y = lat, group=group, fill=benefitiaries)) + # define variables
geom_polygon() + coord_equal()
ggplot(data = municipiogif, # the input data
aes(x = long, y = lat, group=group, fill=cvenum)) + # define variables
geom_polygon() + coord_equal()
ggplot(data = municipiogif, # the input data
aes(x = long, y = lat, group=group, fill=cvemun)) + # define variables
geom_polygon() + coord_equal()
levels(as.factor(municipiogif$benefitiaries))
count(municipiogif$benefitiaries)
table(municipiogif$benefitiaries)
rm(list=ls())
#cargo los dta
inputfolder<-"Data, figuras y do originales/Data-Original/"
dtas<-list.files(path= inputfolder, recursive = TRUE, include.dirs = TRUE)
for(file in dtas) {
# nombre al cual le asigno cada dta
obj_name <- gsub(".dta", "", file)
#open file
dta_file <- read_dta(paste0(inputfolder,file))
# Assign
assign(obj_name, dta_file)
}
#Borro lo que este de mas
rm(dta_file,dtas,file,obj_name)
#Limpio nombres de merge
merge_ss_eneu_final$descripcion_municipio[which(merge_ss_eneu_final$descripcion_municipio=="")]<-merge_ss_eneu_final$name_ss[which(merge_ss_eneu_final$descripcion_municipio=="")]
#merge_ss_eneu_final$descripcion_municipio<-str_to_title(iconv(merge_ss_eneu_final$descripcion_municipio, to = 'Latin1'))
merge_ss_eneu_final$descripcion_municipio<-str_to_title(merge_ss_eneu_final$descripcion_municipio)
#Inporto SHP
#municipioshp <- read_sf("Data, figuras y do originales/municipios_mx_feb2018/municipios_mx_feb2018.shp") #faster
municipio <- readOGR("Data, figuras y do originales/municipios_mx_feb2018/municipios_mx_feb2018.shp")
#plot(municipioshp)
#Names
municipio@data$NOMGEO<-str_to_title(iconv(municipio@data$NOMGEO, to = 'Latin1'))
#Paso a numeric la variable en base a la cual voy a unir.
municipio@data$CVEGEO<-as.numeric(municipio@data$CVEGEO)
#Agrego al poligono la data para unir a los demas
municipio@data<-municipio@data%>%left_join(merge_ss_eneu_final,by=c("CVEGEO"="municipality"))
#Para gif
benef_SP_2002_2009$mydate<-as.factor(paste0(benef_SP_2002_2009$year,benef_SP_2002_2009$quarter))
municipiogif <- broom::tidy(municipio)  #limpio municipio para ggmap
municipio@data$order <- as.numeric(row.names(municipio@data)) # allocate an id variable to the sp data
municipiogif$order <- as.numeric(row.names(municipiogif)) # allocate an id variable to the sp data
head(municipio@data, n = 2) # final check before join (requires shared variable name)
head(municipiogif, n = 2) # final check before join (requires shared variable name)
municipiogif <- left_join(municipiogif, municipio@data%>%select(NOMGEO,cvemun,order)) # join the data
municipiogif<-municipiogif%>%left_join(benef_SP_2002_2009%>%filter(mydate==20074))#agregamos datos de beneficiarios.
municipiogif$benefitiaries<-ifelse(municipiogif$ind>10,municipiogif$ind,NA)#If greater than ten, program is active, else, not, como paper.
ggplot(data = municipiogif, # the input data
aes(x = long, y = lat, group=group, fill=cvemun)) + # define variables
geom_polygon() + coord_equal()
table(municipiogif$benefitiaries)
table(municipiogif$cvemun)
table(municipiogif$group)
view(table(municipiogif$group))
ggplot(data = municipiogif, # the input data
aes(x = long, y = lat, fill=cvemun)) + # define variables
geom_polygon() + coord_equal()
rm(list=ls())
#cargo los dta
inputfolder<-"Data, figuras y do originales/Data-Original/"
dtas<-list.files(path= inputfolder, recursive = TRUE, include.dirs = TRUE)
for(file in dtas) {
# nombre al cual le asigno cada dta
obj_name <- gsub(".dta", "", file)
#open file
dta_file <- read_dta(paste0(inputfolder,file))
# Assign
assign(obj_name, dta_file)
}
#Borro lo que este de mas
rm(dta_file,dtas,file,obj_name)
#Limpio nombres de merge
merge_ss_eneu_final$descripcion_municipio[which(merge_ss_eneu_final$descripcion_municipio=="")]<-merge_ss_eneu_final$name_ss[which(merge_ss_eneu_final$descripcion_municipio=="")]
#merge_ss_eneu_final$descripcion_municipio<-str_to_title(iconv(merge_ss_eneu_final$descripcion_municipio, to = 'Latin1'))
merge_ss_eneu_final$descripcion_municipio<-str_to_title(merge_ss_eneu_final$descripcion_municipio)
#Inporto SHP
#municipioshp <- read_sf("Data, figuras y do originales/municipios_mx_feb2018/municipios_mx_feb2018.shp") #faster
municipio <- readOGR("Data, figuras y do originales/municipios_mx_feb2018/municipios_mx_feb2018.shp")
#plot(municipioshp)
#Names
municipio@data$NOMGEO<-str_to_title(iconv(municipio@data$NOMGEO, to = 'Latin1'))
#Paso a numeric la variable en base a la cual voy a unir.
municipio@data$CVEGEO<-as.numeric(municipio@data$CVEGEO)
#Agrego al poligono la data para unir a los demas
municipio@data<-municipio@data%>%left_join(merge_ss_eneu_final,by=c("CVEGEO"="municipality"))
View(ENE_ENOE)
municipio_df<-fortify(municipio)
municipio_df
ggplot() +
geom_path(data = municipio_df,
aes(x = long, y = lat, group = group),
color = 'gray', fill = 'white', size = .2)
setwd("C:/Users/Joaquin/Desktop/UdeSA/Maestría en Economía/Herramientas Computacionales Para Investigación/Herramientas-Computacionales-Liwski-Sury-Trabajo-Final")
#Cargo Paquetes
suppressMessages({
if(!require("pacman")) install.packages("pacman")
pacman::p_load("tidyverse","readxl","haven","sf","rgdal","RecordLinkage")
})
rm(list=ls())
#cargo los dta
inputfolder<-"Data, figuras y do originales/Data-Original/"
dtas<-list.files(path= inputfolder, recursive = TRUE, include.dirs = TRUE)
for(file in dtas) {
# nombre al cual le asigno cada dta
obj_name <- gsub(".dta", "", file)
#open file
dta_file <- read_dta(paste0(inputfolder,file))
# Assign
assign(obj_name, dta_file)
}
#Borro lo que este de mas
rm(dta_file,dtas,file,obj_name)
#Limpio nombres de merge
merge_ss_eneu_final$descripcion_municipio[which(merge_ss_eneu_final$descripcion_municipio=="")]<-merge_ss_eneu_final$name_ss[which(merge_ss_eneu_final$descripcion_municipio=="")]
#merge_ss_eneu_final$descripcion_municipio<-str_to_title(iconv(merge_ss_eneu_final$descripcion_municipio, to = 'Latin1'))
merge_ss_eneu_final$descripcion_municipio<-str_to_title(merge_ss_eneu_final$descripcion_municipio)
#Inporto SHP
#municipioshp <- read_sf("Data, figuras y do originales/municipios_mx_feb2018/municipios_mx_feb2018.shp") #faster
municipio <- readOGR("Data, figuras y do originales/municipios_mx_feb2018/municipios_mx_feb2018.shp")
municipio <- ms_simplify(municipio) #para que no sea tan pesado
#plot(municipioshp)
#Names
municipio@data$NOMGEO<-str_to_title(iconv(municipio@data$NOMGEO, to = 'Latin1'))
#Paso a numeric la variable en base a la cual voy a unir.
municipio@data$CVEGEO<-as.numeric(municipio@data$CVEGEO)
#Agrego al poligono la data para unir a los demas
municipio@data<-municipio@data%>%left_join(merge_ss_eneu_final,by=c("CVEGEO"="municipality"))
#Inporto SHP
#municipioshp <- read_sf("Data, figuras y do originales/municipios_mx_feb2018/municipios_mx_feb2018.shp") #faster
municipio <- readOGR("Data, figuras y do originales/municipios_mx_feb2018/municipios_mx_feb2018.shp")
ms_simplify(municipio)
setwd("C:/Users/Joaquin/Desktop/UdeSA/Maestría en Economía/Herramientas Computacionales Para Investigación/Herramientas-Computacionales-Liwski-Sury-Trabajo-Final")
#Cargo Paquetes
suppressMessages({
if(!require("pacman")) install.packages("pacman")
pacman::p_load("tidyverse","readxl","haven","sf","rgdal","RecordLinkage",
"rmapshaper")
})
rm(list=ls())
#cargo los dta
inputfolder<-"Data, figuras y do originales/Data-Original/"
dtas<-list.files(path= inputfolder, recursive = TRUE, include.dirs = TRUE)
for(file in dtas) {
# nombre al cual le asigno cada dta
obj_name <- gsub(".dta", "", file)
#open file
dta_file <- read_dta(paste0(inputfolder,file))
# Assign
assign(obj_name, dta_file)
}
#Borro lo que este de mas
rm(dta_file,dtas,file,obj_name)
#Limpio nombres de merge
merge_ss_eneu_final$descripcion_municipio[which(merge_ss_eneu_final$descripcion_municipio=="")]<-merge_ss_eneu_final$name_ss[which(merge_ss_eneu_final$descripcion_municipio=="")]
#merge_ss_eneu_final$descripcion_municipio<-str_to_title(iconv(merge_ss_eneu_final$descripcion_municipio, to = 'Latin1'))
merge_ss_eneu_final$descripcion_municipio<-str_to_title(merge_ss_eneu_final$descripcion_municipio)
#Inporto SHP
#municipioshp <- read_sf("Data, figuras y do originales/municipios_mx_feb2018/municipios_mx_feb2018.shp") #faster
municipio <- readOGR("Data, figuras y do originales/municipios_mx_feb2018/municipios_mx_feb2018.shp")
municipio <- ms_simplify(municipio) #para que no sea tan pesado
#Names
municipio@data$NOMGEO<-str_to_title(iconv(municipio@data$NOMGEO, to = 'Latin1'))
#Paso a numeric la variable en base a la cual voy a unir.
municipio@data$CVEGEO<-as.numeric(municipio@data$CVEGEO)
#Agrego al poligono la data para unir a los demas
municipio@data<-municipio@data%>%left_join(merge_ss_eneu_final,by=c("CVEGEO"="municipality"))
plot(municipio)
#Convertir a JSON
municipio_json<-geojson_json(municipio)
#guardar
geojson_write(municipio_json,file = "todosmun.json")
pacman::p_load("tidyverse","readxl","haven","sf","rgdal","RecordLinkage",
"rmapshaper","geojsonio")
municipio_json<-geojson_json(municipio)
#guardar
geojson_write(municipio_json,file = "municipios.json")
municipio_json
#Convertir a JSON
municipio_json<-geojson_json(municipio)
municipio_json
geojson_json(municipio)
View(caract_muni)
municipio@data%>%left_join(caract_muni)
municipio@data<-municipio@data%>%left_join(caract_muni)
municipio_df<-tidy(municipio, region='id')
ggplot(municipio, aes(x = long, y = lat, group = ID)) +
geom_polygon(colour='black', fill='white')
municipio_df<-bloom:tidy(municipio, region='id')
ggplot(municipio, aes(x = long, y = lat, group = ID)) +
geom_polygon(colour='black', fill='white')
municipio_df<-bloom:tidy(municipio, region='id')
ggplot(municipio, aes(x = long, y = lat, group = id)) +
geom_polygon(colour='black', fill='white')
municipio_df
head(municipiodf)
head(municipio_df)
municipio_df<-bloom::tidy(municipio, region='id')
municipio_df<-broom::tidy(municipio, region='id')
broom::tidy(municipio, region='id')
head(municipio)
ggplot(municipio, aes(x = long, y = lat, group = id)) +
geom_sf(colour='black', fill='white')
#Inporto SHP
#municipioshp <- read_sf("Data, figuras y do originales/municipios_mx_feb2018/municipios_mx_feb2018.shp") #faster
municipio <- st_read("Data, figuras y do originales/municipios_mx_feb2018/municipios_mx_feb2018.shp")
municipio <- ms_simplify(municipio) #para que no sea tan pesado
municipio@data$NOMGEO<-str_to_title(iconv(municipio@data$NOMGEO, to = 'Latin1'))
#Paso a numeric la variable en base a la cual voy a unir.
municipio@data$CVEGEO<-as.numeric(municipio@data$CVEGEO)
#Agrego al poligono la data para unir a los demas
municipio@data<-municipio@data%>%left_join(merge_ss_eneu_final,by=c("CVEGEO"="municipality"))
ggplot(municipio, aes(x = long, y = lat, group = id)) +
geom_sf(colour='black', fill='white')
ggplot(municipio, aes(x = long, y = lat)) +
geom_sf(colour='black', fill='white')
ggplot(municipio, aes(x = lon, y = lat)) +
geom_sf(colour='black', fill='white')
View(municipio)
plot(st_geometry(municipio))
ggplot(municipio) +
geom_sf(colour='black', fill='white')
municipio%>%left_join(merge_ss_eneu_final,by=c("CVEGEO"="municipality"))
municipio$NOMGEO<-str_to_title(iconv(municipio@data$NOMGEO, to = 'Latin1'))
#Paso a numeric la variable en base a la cual voy a unir.
municipio@data$CVEGEO<-as.numeric(municipio@data$CVEGEO)
#Paso a numeric la variable en base a la cual voy a unir.
municipio$CVEGEO<-as.numeric(municipio@data$CVEGEO)
municipio$CVEGEO
municipio%>%merge(merge_ss_eneu_final,by=c("CVEGEO"="municipality"))
municipio%>%merge(merge_ss_eneu_final)
municipio<-municipio%>%merge(merge_ss_eneu_final)
View(municipio)
setwd("C:/Users/Joaquin/Desktop/UdeSA/Maestría en Economía/Herramientas Computacionales Para Investigación/Herramientas-Computacionales-Liwski-Sury-Trabajo-Final")
#Cargo Paquetes
suppressMessages({
if(!require("pacman")) install.packages("pacman")
pacman::p_load("tidyverse","readxl","haven","sf","rgdal","RecordLinkage",
"rmapshaper","geojsonio")
})
rm(list=ls())
#cargo los dta
inputfolder<-"Data, figuras y do originales/Data-Original/"
dtas<-list.files(path= inputfolder, recursive = TRUE, include.dirs = TRUE)
for(file in dtas) {
# nombre al cual le asigno cada dta
obj_name <- gsub(".dta", "", file)
#open file
dta_file <- read_dta(paste0(inputfolder,file))
# Assign
assign(obj_name, dta_file)
}
#Borro lo que este de mas
rm(dta_file,dtas,file,obj_name)
#Limpio nombres de merge
merge_ss_eneu_final$descripcion_municipio[which(merge_ss_eneu_final$descripcion_municipio=="")]<-merge_ss_eneu_final$name_ss[which(merge_ss_eneu_final$descripcion_municipio=="")]
#merge_ss_eneu_final$descripcion_municipio<-str_to_title(iconv(merge_ss_eneu_final$descripcion_municipio, to = 'Latin1'))
merge_ss_eneu_final$descripcion_municipio<-str_to_title(merge_ss_eneu_final$descripcion_municipio)
#Inporto SHP
#municipioshp <- read_sf("Data, figuras y do originales/municipios_mx_feb2018/municipios_mx_feb2018.shp") #faster
municipio <- st_read("Data, figuras y do originales/municipios_mx_feb2018/municipios_mx_feb2018.shp", options = "ENCODING=WINDOWS-1252")
municipio <- ms_simplify(municipio) #para que no sea tan pesado
head(municipio)
head(merge_ss_eneu_final)
as.numeric(municipio$CVEGEO)
municipio$CVEGEO<-as.numeric(municipio$CVEGEO)
municipio2<-municipio%>%left_join(merge_ss_eneu_final, by=c("CVEGEO"="municipality"))
View(municipio2)
municipio<-municipio%>%left_join(merge_ss_eneu_final, by=c("CVEGEO"="municipality"))
View(municipio)
head(municipio)
setwd("C:/Users/Joaquin/Desktop/UdeSA/Maestría en Economía/Herramientas Computacionales Para Investigación/Herramientas-Computacionales-Liwski-Sury-Trabajo-Final")
#Cargo Paquetes
suppressMessages({
if(!require("pacman")) install.packages("pacman")
pacman::p_load("tidyverse","readxl","haven","sf","rgdal","RecordLinkage",
"rmapshaper","geojsonio")
})
rm(list=ls())
#cargo los dta
inputfolder<-"Data, figuras y do originales/Data-Original/"
dtas<-list.files(path= inputfolder, recursive = TRUE, include.dirs = TRUE)
for(file in dtas) {
# nombre al cual le asigno cada dta
obj_name <- gsub(".dta", "", file)
#open file
dta_file <- read_dta(paste0(inputfolder,file))
# Assign
assign(obj_name, dta_file)
}
#Borro lo que este de mas
rm(dta_file,dtas,file,obj_name)
#Limpio nombres de merge
merge_ss_eneu_final$descripcion_municipio[which(merge_ss_eneu_final$descripcion_municipio=="")]<-merge_ss_eneu_final$name_ss[which(merge_ss_eneu_final$descripcion_municipio=="")]
#merge_ss_eneu_final$descripcion_municipio<-str_to_title(iconv(merge_ss_eneu_final$descripcion_municipio, to = 'Latin1'))
merge_ss_eneu_final$descripcion_municipio<-str_to_title(merge_ss_eneu_final$descripcion_municipio)
#Inporto SHP
#municipioshp <- read_sf("Data, figuras y do originales/municipios_mx_feb2018/municipios_mx_feb2018.shp") #faster
municipio <- st_read("Data, figuras y do originales/municipios_mx_feb2018/municipios_mx_feb2018.shp", options = "ENCODING=WINDOWS-1252")
municipio <- ms_simplify(municipio) #para que no sea tan pesado
municipio$CVEGEO<-as.numeric(municipio$cvenum)
municipio<-municipio%>%left_join(merge_ss_eneu_final, by=c("cvenum"="municipality"))
municipio$cvenum<-as.numeric(municipio$cvenum)
municipio$cvemun<-as.numeric(municipio$cvemun)
head(municipio)
municipio$CVEGEO<-as.numeric(municipio$CVEGEO)
municipio<-municipio%>%left_join(merge_ss_eneu_final, by=c("CVEGEO"="municipality"))
head(caract_muni)
head(municipio)
municipio%>%left_join(caract_muni, by=c("cvemun"))
municipio%>%left_join(caract_muni, by=c("cvenum"))
municipio%>%left_join(caract_muni, by=c("cvemun"))
municipiocaract<-municipio%>%left_join(caract_muni, by=c("cvemun"))
head(municipiocaract)
ggplot(municipiocaract) +
geom_sf(colour='black', aes(fill=urban))
ggplot(municipiocaract) +
geom_sf(colour='black', aes(fill=as.factor(urban)))
ggplot(municipiocaract) +
geom_sf(colour='black', aes(fill=as.factor(urban),color=as.factor(urban)))
View(municipio)
