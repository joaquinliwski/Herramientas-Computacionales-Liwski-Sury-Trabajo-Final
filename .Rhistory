estchi>cuantilchi3df
Mobs = matrix(c(8,15,13,14,19,15,15,4,7,3,1,4), nrow= 4, byrow= TRUE)
n <- sum(Mobs)
n
Mobs
chisq.test(Mobs, correct = FALSE)
estchi=12.183
cuantilchi6df= 12.5916
estchi>cuantilchi6df
#รณ
marginalesFilas = margin.table(Mobs, margin=1)
marginalesColumnas = margin.table(Mobs, margin=2)
Mesp= marginalesFilas%*%marginalesColumnas/n
dim(marginalesFilas) = c(4,1)
Mesp
table <- data.frame(Mobs,Mesp)
estchi = sum((Mobs - Mesp)^2 /Mesp)
#EJERCICIO 10#
Mobs = matrix(c(14,16,8,133,180,93,12,14,12,241,285,139,11,6,8,259,265,221), nrow= 6, byrow= TRUE)
#EJERCICIO 10#
Mobs = matrix(c(14,16,8,133,180,93,12,14,12,241,285,139,11,6,8,259,265,221), nrow= 6, byrow= TRUE)
n <- sum(Mobs)
n
Mobs
chisq.test(Mobs, correct = FALSE)
Mobs = matrix(c(79,58,49,10,8,9,10,34,42), nrow= 3, byrow= TRUE)
n <- sum(Mobs)
n
Mobs
chisq.test(Mobs, correct = FALSE)
estchi=27.289
cuantilchi6df= 12.5916
estchi>cuantilchi6df
#รณ
marginalesFilas = margin.table(Mobs, margin=1)
marginalesColumnas = margin.table(Mobs, margin=2)
Mesp= marginalesFilas%*%marginalesColumnas/n
dim(marginalesFilas) = c(3,1)
Mesp
table <- data.frame(Mobs,Mesp)
estchi = sum((Mobs - Mesp)^2 /Mesp)
sort(v)
v <- c=(2,6,8,2,3,5,8,6,4)
sort(v)
v <- c=(2,6,8,2,3,5,8,6,4)
v <- c(2,6,8,2,3,5,8,6,4)
sort(v)
#3
#a)
A <- c(2.7,2.8,4.8,6.2,6.8,7.8,8.2,8.4)
B <- c(2.1,2.2,2.3,2.4,2.5,3.4,6.3,6.4)
mean(A)
mean(B)
sd(A)
sd(B)
t.test(A,B, alternative = "two.sided", var.equal = TRUE)
wilcox.test(A,B)
A= c(50,48,53,60,37)
B=c(40,51,62,55,64)
t.test(A, B, conf.level = 0.95)
#HOMOGENEIDAD
Mobs = matrix(c(55,141,33,145,70,139,49,161), nrow= 4, byrow= TRUE)
n <- sum(Mobs)
Mobs
chisq=chisq.test(Mobs, correct=FALSE)
chisq
#Para ver matrix esperada
chisq$expected
#รณ
marginalesFilas = margin.table(Mobs, margin=1)
marginalesColumnas = margin.table(Mobs, margin=2)
dim(marginalesFilas) = c(4,1)
Mesp= marginalesFilas%*%marginalesColumnas/n
Mesp
estchi = sum((Mobs - Mesp)^2 /Mesp)
datos= read.csv(file.choose(), header=TRUE)
datos
X= read.csv(file.choose(), header=TRUE)
X
X$x1
X$x2
t.test(X$x1,X$x2,alternative = "less", var.equal = TRUE)
t.test(X$x1,X$x2, var.equal=TRUE, conf.level = 0.93)
t.test(X$x1,X$x2, var.equal=TRUE, alternative= "two.sided", conf.level = 0.93)
Sum( X$x1)
Sum(X$x1)
View(datos)
mean(X$x1)
Mobs= matrix(c(95, 145, 36, 51, 55, 102), nrow = 3, byrow= TRUE
n <- sum(Mobs)
Mobs
Mobs= matrix(c(95, 145, 36, 51, 55, 102), nrow = 3, byrow= TRUE
Mobs
Mobs
Mobs= matrix(c(95, 145, 36, 51, 55, 102), nrow = 3, byrow= TRUE
Mobs
Mobs= matrix(c(95, 145, 36, 51, 55, 102), nrow = 3, byrow= TRUE
View(Mobs)
View(Mobs)
Mobs= matrix(c(95, 145, 36, 51, 55, 102), nrow = 3, byrow= TRUE)
n <- sum(Mobs)
Mobs
chisq=chisq.test(Mobs, correct=FALSE)
chisq
pvalor= 0.54 > 0,02
Mobs= matrix(c(95, 145, 36, 51, 55, 102), nrow = 3, byrow= TRUE)
n <- sum(Mobs)
Mobs
n
chisq=chisq.test(Mobs, correct=FALSE)
chisq
#Para ver matrix esperada
chisq$expectd
marginalesFilas = margin.table(Mobs, margin=1)
marginalesColumnas = margin.table(Mobs, margin=2)
dim(marginalesFilas) = c(3,1)
Mesp= marginalesFilas%*%marginalesColumnas/n
Mesp
estchi = sum((Mobs - Mesp)^2 /Mesp)
estchi
cuantilchi=7.824
estchi=
cuantilchi=
estchi>cuantilchi
estchi=
cuantilchi=
estchi>cuantilchi
estchi = sum((Mobs - Mesp)^2 /Mesp)
estchi
cuantilchi=7.824
estchi=
cuantilchi=
estchi>cuantilchi
Mobs= matrix(c(95, 145, 36, 51, 55, 102), nrow = 3, byrow= TRUE)
n <- sum(Mobs)
Mobs
n
chisq=chisq.test(Mobs, correct=FALSE)
chisq
chisq=chisq.test(Mobs)
chisq
source('~/Desktop/Estadistica II /Untitled2.R')
x1<- runif(100,min = 0, max = 100)
x3<- runif(100,min = 0, max = 100)
x2<- runif(100,min = 0, max = 100)
datos<-data.frame(x1,x2,x3)
View(datos)
for (i in 1:50) {
X1<- runif(100,min = 0, max = 100)
x2<- runif(100,min = 0, max = 100)
x3<- runif(100,min = 0, max = 100)
datos<-data.frame(x1,x2,x3)
}
View(datos)
for (i in 1:50) {
X1<- runif(100,min = 0, max = 100)
x2<- runif(100,min = 0, max = 100)
x3<- runif(100,min = 0, max = 100)
datos<-data.frame(x1,x2,x3)
}
for (i in 1:50) {
x1<- runif(100,min = 0, max = 100)
x2<- runif(100,min = 0, max = 100)
x3<- runif(100,min = 0, max = 100)
datos<-data.frame(x1,x2,x3)
for (i in 1:50) {
x1<- runif(100,min = 0, max = 100)
x2<- runif(100,min = 0, max = 100)
x3<- runif(100,min = 0, max = 100)
datos<-data.frame(x1,x2,x3)
}
for (i in 1:50) {
x1<- runif(100,min = 0, max = 100)
x2<- runif(100,min = 0, max = 100)
x3<- runif(100,min = 0, max = 100)
datos<-data.frame(x1,x2,x3)
}
for (i in 1:50) {
x1<- runif(100,min = 0, max = 100)
x2<- runif(100,min = 0, max = 100)
x3<- runif(100,min = 0, max = 100)
datos<-data.frame(x1,x2,x3)
}
for (i in 1:50) {
x1<- runif(100,min = 0, max = 100)
x2<- runif(100,min = 0, max = 100)
x3<- runif(100,min = 0, max = 100)
datos<-data.frame(x1,x2,x3)
}
x1<- runif(100,min = 0, max = 100)
x2<- runif(100,min = 0, max = 100)
x3<- runif(100,min = 0, max = 100)
datos<-data.frame(x1,x2,x3)
set.seed(1,50)
x1<- runif(100,min = 0, max = 100)
x2<- runif(100,min = 0, max = 100)
x3<- runif(100,min = 0, max = 100)
datos<-data.frame(x1,x2,x3)
}
datos ["Y"] = 400 + 2*x1 + 2*x2 -2*x3
datos ["Y"] = 400 + 2*x1 + 2*x2 -2*x3
datos ["Y"] = 400 + 2*x1 + 2*x2 -2*x3
datos ["Y"] = 400 + 2*x1 + 2*x2 -2*x3
datos ["Y"] = 400 + 2*x1 + 2*x2 -2*x3
View(datos)
for (i in 1:50){
data= paste("dato", i)
x1<- runif(100,min = 0, max = 100)
x2<- runif(100,min = 0, max = 100)
x3<- runif(100,min = 0, max = 100)
datos<-data.frame(x1,x2,x3)
datos ["Y"] = 400 + 2*x1 + 2*x2 -2*x3
}
View(datos)
for (i in 1:50){
data= paste("dato", i)
x1<- runif(100,min = 0, max = 100)
x2<- runif(100,min = 0, max = 100)
x3<- runif(100,min = 0, max = 100)
datos<-data.frame(x1,x2,x3)
assign(data, datos)
datos ["Y"] = 400 + 2*x1 + 2*x2 -2*x3
}
View(`dato 1`)
datos ["Y"] = 400 + 2*x1 + 2*x2 -2*x3
for (i in 1:50){
data= paste("dato", i)
x1<- runif(100,min = 0, max = 100)
x2<- runif(100,min = 0, max = 100)
x3<- runif(100,min = 0, max = 100)
datos ["Y"] = 400 + 2*x1 + 2*x2 -2*x3
datos<-data.frame(x1,x2,x3)
assign(data, datos)
}
for (i in 1:50){
data= paste("dato", i)
x1<- runif(100,min = 0, max = 100)
x2<- runif(100,min = 0, max = 100)
x3<- runif(100,min = 0, max = 100)
datos <-data.frame(x1,x2,x3)
datos ["Y"] = 400 + 2*x1 + 2*x2 -2*x3
assign(data, datos)
}
View(`dato 46`)
for (i in 1:50){
data= paste("dato", i)
x1<- runif(100,min = 0, max = 100)
x2<- runif(100,min = 0, max = 100)
x3<- runif(100,min = 0, max = 100)
u <- rnorm(100,0 sqrt(1400))
datos <-data.frame(x1,x2,x3)
datos ["Y"] = 400 + 2*x1 + 2*x2 -2*x3
assign(data, datos)
}
for (i in 1:50){
data= paste("dato", i)
x1<- runif(100,min = 0, max = 100)
x2<- runif(100,min = 0, max = 100)
x3<- runif(100,min = 0, max = 100)
u <- rnorm(100,0 sqrt(1400))
datos <-data.frame(x1,x2,x3,u)
datos ["Y"] = 400 + 2*x1 + 2*x2 -2*x3 + u
assign(data, datos)
}
for (i in 1:50){
data= paste("dato", i)
x1<- runif(100,min = 0, max = 100)
x2<- runif(100,min = 0, max = 100)
x3<- runif(100,min = 0, max = 100)
u <- rnorm(100,0, sqrt(1400))
datos <-data.frame(x1,x2,x3,u)
datos ["Y"] = 400 + 2*x1 + 2*x2 -2*x3 + u
assign(data, datos)
}
View(`dato 1`)
for (i in 1:50){
data= paste("dato", i)
set.seed(i)
x1<- runif(100,min = 0, max = 100)
set.seed(i)
x2<- runif(100,min = 0, max = 100)
set.seed(i)
x3<- runif(100,min = 0, max = 100)
set.seed(i)
u <- rnorm(100,0, sqrt(1400))
datos <-data.frame(x1,x2,x3,u)
datos ["Y"] = 400 + 2*x1 + 2*x2 -2*x3 + u
assign(data, datos)
}
View(`dato 1`)
set.seed(1,50)
set.seed(1:50)
for (i in 1:50){
data= paste("dato", i)
set.seed(i)
x1<- runif(100,min = 0, max = 100)
set.seed(i)
x2<- runif(100,min = 0, max = 100)
set.seed(i)
x3<- runif(100,min = 0, max = 100)
set.seed(i)
u <- rnorm(100,0, sqrt(1400))
datos <-data.frame(x1,x2,x3,u)
datos ["Y"] = 400 + 2*x1 + 2*x2 -2*x3 + u
assign(data, datos)
}
View(`dato 1`)
View(`dato 1`)
View(`dato 10`)
View(`dato 1`)
for (i in 1:50){
data= paste("dato",i)
set.seed(i)
x1<- runif(100,min = 0, max = 100)
set.seed(i)
x2<- runif(100,min = 0, max = 100)
set.seed(i)
x3<- runif(100,min = 0, max = 100)
set.seed(i)
u <- rnorm(100,0, sqrt(1400))
datos <-data.frame(x1,x2,x3,u)
datos ["Y"] = 400 + 2*x1 + 2*x2 -2*x3 + u
assign(data, datos)
}
for (i in 1:50){
data= paste("dato",i,sep="")
set.seed(i)
x1<- runif(100,min = 0, max = 100)
set.seed(i)
x2<- runif(100,min = 0, max = 100)
set.seed(i)
x3<- runif(100,min = 0, max = 100)
set.seed(i)
u <- rnorm(100,0, sqrt(1400))
datos <-data.frame(x1,x2,x3,u)
datos ["Y"] = 400 + 2*x1 + 2*x2 -2*x3 + u
assign(data, datos)
}
#2)
cor(dato1["x1"],dato1["x2"])
round(cor(dato1),2)
lm.fit = lm (dato1$Y ~ dato1$x1 dato1$x2 dato1$x3)
lm.fit = lm (dato1$Y ~ dato1$x1 dato1$x2 dato1$x3, data=dato1)
lm.fit = lm (dato1$Y ~ dato1$x1+dato1$x2+dato1$x3)
View(lm.fit)
View(lm.fit)
coef(lm.fit)
View(dato1)
for (i in 1:50){
data= paste("dato",i,sep="")
x1<- runif(100,min = 0, max = 100)
x2<- runif(100,min = 0, max = 100)
x3<- runif(100,min = 0, max = 100)
u <- rnorm(100,0, sqrt(1400))
datos <-data.frame(x1,x2,x3,u)
datos ["Y"] = 400 + 2*x1 + 2*x2 -2*x3 + u
assign(data, datos)
}
round(cor(dato1),2)
lm.fit = lm (dato1$Y ~ dato1$x1+dato1$x2+dato1$x3)
coef(lm.fit)
install.packages("xlsx")
#1
df = list()
for (i in 1:50){
data= paste("dato",i,sep="")
x1<- runif(100,min = 0, max = 100)
x2<- runif(100,min = 0, max = 100)
x3<- runif(100,min = 0, max = 100)
u <- rnorm(100,0, sqrt(1400))
datos <-data.frame(x1,x2,x3,u)
datos ["Y"] = 400 + 2*x1 + 2*x2 -2*x3 + u
assign(data, datos)
list[data]
}
for (i in 1:50){
data= paste("dato",i,sep="")
x1<- runif(100,min = 0, max = 100)
x2<- runif(100,min = 0, max = 100)
x3<- runif(100,min = 0, max = 100)
u <- rnorm(100,0, sqrt(1400))
datos <-data.frame(x1,x2,x3,u)
datos ["Y"] = 400 + 2*x1 + 2*x2 -2*x3 + u
assign(data, datos)
list[assign(data,datos)]
}
for (i in 1:50){
data= paste("dato",i,sep="")
x1<- runif(100,min = 0, max = 100)
x2<- runif(100,min = 0, max = 100)
x3<- runif(100,min = 0, max = 100)
u <- rnorm(100,0, sqrt(1400))
datos <-data.frame(x1,x2,x3,u)
datos ["Y"] = 400 + 2*x1 + 2*x2 -2*x3 + u
assign(data, datos)
df[datos]
}
#1
df = list()
list[1]
df[1]
for (i in 1:50){
data= paste("dato",i,sep="")
x1<- runif(100,min = 0, max = 100)
x2<- runif(100,min = 0, max = 100)
x3<- runif(100,min = 0, max = 100)
u <- rnorm(100,0, sqrt(1400))
datos <-data.frame(x1,x2,x3,u)
datos ["Y"] = 400 + 2*x1 + 2*x2 -2*x3 + u
assign(data, datos)
df[i] = assign(data, datos)
}
View(df)
#1
df = list()
for (i in 1:50){
data= paste("dato",i,sep="")
x1<- runif(100,min = 0, max = 100)
x2<- runif(100,min = 0, max = 100)
x3<- runif(100,min = 0, max = 100)
u <- rnorm(100,0, sqrt(1400))
datos <-data.frame(x1,x2,x3,u)
datos ["Y"] = 400 + 2*x1 + 2*x2 -2*x3 + u
df[i] = assign(data, datos)
}
View(df)
setwd("~/Desktop/Herramientas computacionales/TP final/Herramientas-Computacionales-Liwski-Sury-Trabajo-Final")
suppressMessages({
if(!require("pacman")) install.packages("pacman")
pacman::p_load("tidyverse","readxl","haven","sf","rgdal","RecordLinkage",
"rmapshaper","geojsonio")
})
Yes
inputfolder<-"Data, figuras y do originales/Data-Original/"
dtas<-list.files(path= inputfolder, recursive = TRUE, include.dirs = TRUE)
for(file in dtas) {
# nombre al cual le asigno cada dta
obj_name <- gsub(".dta", "", file)
#open file
dta_file <- read_dta(paste0(inputfolder,file))
# Assign
assign(obj_name, dta_file)
}
rm(dta_file,dtas,file,obj_name)
merge_ss_eneu_final$descripcion_municipio[which(merge_ss_eneu_final$descripcion_municipio=="")]<-merge_ss_eneu_final$name_ss[which(merge_ss_eneu_final$descripcion_municipio=="")]
#merge_ss_eneu_final$descripcion_municipio<-str_to_title(iconv(merge_ss_eneu_final$descripcion_municipio, to = 'Latin1'))
merge_ss_eneu_final$descripcion_municipio<-str_to_title(merge_ss_eneu_final$descripcion_municipio)
library(haven)
library(tidyverse)
library(readxl)
library(sf)
library(rgdal)
library(RecordLinkage)
library(rmapshaper)
library(geojsonio)
suppressMessages({
if(!require("pacman")) install.packages("pacman")
pacman::p_load("tidyverse","readxl","haven","sf","rgdal","RecordLinkage",
"rmapshaper","geojsonio")
})
suppressMessages({
if(!require("pacman")) install.packages("pacman")
pacman::p_load("tidyverse","readxl","haven","sf","rgdal","RecordLinkage",
"rmapshaper","geojsonio")
})
Yes
suppressMessages({
if(!require("pacman")) install.packages("pacman")
pacman::p_load("tidyverse","readxl","haven","sf","rgdal","RecordLinkage",
"rmapshaper","geojsonio")
})
rm(list=ls())
inputfolder<-"Data, figuras y do originales/Data-Original/"
dtas<-list.files(path= inputfolder, recursive = TRUE, include.dirs = TRUE)
for(file in dtas) {
# nombre al cual le asigno cada dta
obj_name <- gsub(".dta", "", file)
#open file
dta_file <- read_dta(paste0(inputfolder,file))
# Assign
assign(obj_name, dta_file)
}
rm(dta_file,dtas,file,obj_name)
merge_ss_eneu_final$descripcion_municipio[which(merge_ss_eneu_final$descripcion_municipio=="")]<-merge_ss_eneu_final$name_ss[which(merge_ss_eneu_final$descripcion_municipio=="")]
#merge_ss_eneu_final$descripcion_municipio<-str_to_title(iconv(merge_ss_eneu_final$descripcion_municipio, to = 'Latin1'))
merge_ss_eneu_final$descripcion_municipio<-str_to_title(merge_ss_eneu_final$descripcion_municipio)
install.packages("stringr")
#Limpio nombres de merge
merge_ss_eneu_final$descripcion_municipio[which(merge_ss_eneu_final$descripcion_municipio=="")]<-merge_ss_eneu_final$name_ss[which(merge_ss_eneu_final$descripcion_municipio=="")]
#merge_ss_eneu_final$descripcion_municipio<-str_to_title(iconv(merge_ss_eneu_final$descripcion_municipio, to = 'Latin1'))
merge_ss_eneu_final$descripcion_municipio<-str_to_title(merge_ss_eneu_final$descripcion_municipio)
install.packages("tidyverse")
#Limpio nombres de merge
merge_ss_eneu_final$descripcion_municipio[which(merge_ss_eneu_final$descripcion_municipio=="")]<-merge_ss_eneu_final$name_ss[which(merge_ss_eneu_final$descripcion_municipio=="")]
#merge_ss_eneu_final$descripcion_municipio<-str_to_title(iconv(merge_ss_eneu_final$descripcion_municipio, to = 'Latin1'))
merge_ss_eneu_final$descripcion_municipio<-str_to_title(merge_ss_eneu_final$descripcion_municipio)
install.packages("stringr")
install.packages("tidyverse")
View(merge_ss_eneu_final)
View(merge_ss_eneu_final)
municipio <- st_read("Data, figuras y do originales/municipios_mx_feb2018/municipios_mx_feb2018.shp", options = "ENCODING=WINDOWS-1252")
municipio <- ms_simplify(municipio) #para que no sea tan pesado
municipio$CVEGEO<-as.numeric(municipio$CVEGEO)
municipio<-municipio%>%left_join(merge_ss_eneu_final, by=c("cvemun"="municipality"))
install.packages("sf")
municipio <- st_read("Data, figuras y do originales/municipios_mx_feb2018/municipios_mx_feb2018.shp", options = "ENCODING=WINDOWS-1252")
municipio <- st_read("Data, figuras y do originales/municipios_mx_feb2018/municipios_mx_feb2018.shp", options = "ENCODING=WINDOWS-1252")
suppressMessages({
if(!require("pacman")) install.packages("pacman")
pacman::p_load("tidyverse","readxl","haven","sf","rgdal","RecordLinkage",
"rmapshaper","geojsonio")
})
